<?xml version="1.0"?>
{% import "macros.xml.j2" as macros with context %}
<job_conf>
    <plugins workers="2">
{% if galaxy_extras_config_slurm %}
        <plugin id="slurm" type="runner" load="galaxy.jobs.runners.slurm:SlurmJobRunner">
            <param id="drmaa_library_path">/usr/lib/slurm-drmaa/lib/libdrmaa.so</param>
        </plugin>
{% endif %}
{% if galaxy_extras_config_condor %}
        <plugin id="condor" type="runner" load="galaxy.jobs.runners.condor:CondorJobRunner" />
{% endif %}
{% if galaxy_extras_config_pbs %}
        <plugin id="pbs" type="runner" load="galaxy.jobs.runners.drmaa:DRMAAJobRunner">
            <param id="drmaa_library_path">/usr/lib/pbs-drmaa/lib/libdrmaa.so.1</param>
        </plugin>
{% endif %}
{% if galaxy_extras_config_k8_jobs %}
        <plugin id="k8" type="runner" load="galaxy.jobs.runners.kubernetes:KubernetesJobRunner">
            <!-- We are inside of Kubernetes so use this. -->
            <param id="k8s_use_service_account">true</param>
            <param id="k8s_persistent_volume_claim_name">galaxy-web-claim0</param>
            <param id="k8s_persistent_volume_claim_mount_path">/export</param>
        </plugin>
{% endif %}
        <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner"/>
    </plugins>
    <!-- The default handler can be changed by specifying the GALAXY_HANDLERS_DEFAULT environment variable. -->
    <handlers default_from_environ="GALAXY_HANDLERS_DEFAULT" default="handlers">
{% if galaxy_handler_processes == 0 %}
        <handler id="web0" tags="handlers"/>
{% else %}
  {% for i in range(galaxy_handler_processes) %}
        <handler id="handler{{ i }}" tags="handlers"/>
  {% endfor %}
{% endif %}
    </handlers>
    <!-- The default destination can be changed by specifying the GALAXY_DESTINATIONS_DEFAULT environment variable. -->
    <destinations default_from_environ="GALAXY_DESTINATIONS_DEFAULT" default="{{ galaxy_extras_galaxy_destination_default }}">
        <destination id="docker_dispatch" runner="dynamic">
            <!-- Allow different default destinations based on whether the tool
                 supports Docker or not. -->
            <param id="type">docker_dispatch</param>
            <param id="docker_destination_id" from_environ="GALAXY_DESTINATIONS_DOCKER_DEFAULT">{{ galaxy_extras_galaxy_destination_docker_default }}</param>
            <param id="default_destination_id" from_environ="GALAXY_DESTINATIONS_NO_DOCKER_DEFAULT">{{ galaxy_extras_galaxy_destination_default }}</param>
        </destination>
        <destination id="local_no_container" runner="local">
            <env file="{{ galaxy_venv_dir }}/bin/activate"/>
        </destination>
{% if galaxy_extras_config_slurm or galaxy_extras_config_pbs or galaxy_extras_config_condor %}
  {% if galaxy_extras_config_pbs %}
        <destination id="pbs_cluster" runner="pbs">
            <env file="{{ galaxy_venv_dir }}/bin/activate"/>
            {{ macros.docker_enabled() }}
        </destination>
 {% endif %}
  {% if galaxy_extras_config_slurm %}
        <destination id="slurm_cluster" runner="slurm">
            <param id="nativeSpecification" from_environ="NATIVE_SPEC">--ntasks={{ galaxy_extras_slurm_ntask }} --share</param>
            <env file="{{ galaxy_venv_dir }}/bin/activate"/>
            {{ macros.docker_enabled() }}
        </destination>
  {% endif %}
  {% if galaxy_extras_config_condor %}
        <destination id="condor_cluster" runner="condor">
        {% if galaxy_extras_config_condor_docker %}
            {{ macros.docker_enabled() }}
            <param id="universe" from_environ="GALAXY_CONDOR_UNIVERSE">vanilla</param>
        {% endif %}
            <env file="{{ galaxy_venv_dir }}/bin/activate"/>
        </destination>
  {% endif %}
  {% if galaxy_extras_config_k8_jobs %}
        <destination id="k8_default" runner="k8">
            <!-- Following parameter must be set to True for this runner. -->
            <param id="docker_enabled">true</param>
            <env file="{{ galaxy_venv_dir }}/bin/activate"/>
        </destination>
  {% endif %}

{% endif %}
    </destinations>
    <limits>
    </limits>
</job_conf>
